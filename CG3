/*3 Implement Bresenham line drawing algorithm to draw Solid line. Divide the
screen in four quadrants with center as (0, 0). The line should work for all the slopes*/

#include <GL/glut.h>
#include <iostream>
using namespace std;

int r;

void plot(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x + 320, y + 240);
    glVertex2i(y + 320, x + 240);
    glVertex2i(-y + 320, x + 240);
    glVertex2i(-x + 320, y + 240);
    glVertex2i(-x + 320, -y + 240);
    glVertex2i(-y + 320, -x + 240);
    glVertex2i(y + 320, -x + 240);
    glVertex2i(x + 320, -y + 240);
    glEnd();
}

void drawCircle() {
    int x = 0, y = r;
    int d = 3 - 2 * r;
    while (x <= y) {
        plot(x, y);
        if (d < 0) d += 4 * x + 6;
        else { d += 4 * (x - y) + 10; y--; }
        x++;
    }
    glFlush();
}

void init() {
    glClearColor(1, 1, 1, 0);
    glColor3f(1, 0, 0);
    gluOrtho2D(0, 640, 0, 480);
}

int main(int argc, char** argv) {
    cout << "Enter radius: ";
    cin >> r;
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(640, 480);
    glutCreateWindow("Bresenham Circle");
    init();
    glutDisplayFunc(drawCircle);
    glutMainLoop();
}

